name: Destroy Infrastructure

on:
  workflow_dispatch:  # Solo ejecutable manualmente

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Seleccionar archivo TFVARS por rama
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then echo "TFVARS=dev.tfvars" >> $GITHUB_ENV; fi
          if [[ "${{ github.ref }}" == "refs/heads/test" ]]; then echo "TFVARS=test.tfvars" >> $GITHUB_ENV; fi
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then echo "TFVARS=prod.tfvars" >> $GITHUB_ENV; fi

      - name: Terraform Init
        run: terraform init
        working-directory: .infra/terraform

      - name: Cargar nombre de cluster desde TFVARS
        run: |
          EKS_NAME=$(grep '^cluster_name' .infra/terraform/${TFVARS} | awk -F '"' '{print $2}')
          echo "EKS_CLUSTER_NAME=$EKS_NAME" >> $GITHUB_ENV

      - name: Mostrar nombre del cluster
        run: echo "Cluster a eliminar: $EKS_CLUSTER_NAME"

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -var-file=${{ env.TFVARS }}
        working-directory: .infra/terraform
